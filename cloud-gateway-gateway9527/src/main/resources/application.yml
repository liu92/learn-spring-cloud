server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      # 多个路由
      routes:
         #payment_route #路由的ID,没有固定规则但要求唯一，建议配合服务名
        - id: payment_route1
          # 匹配后提供服务的路由地址
#          uri: http://localhost:8001
          #将写死的地址 换成服务名
          uri: lb://cloud-payment-service
          predicates:
             #断言，路径相匹配的进行路由, **表示通配符
            - Path=/payment/get/**
        #payment_route #路由的ID,没有固定规则但要求唯一，建议配合服务名
        - id: payment_route2
          # 匹配后提供服务的路由地址
#          uri: http://localhost:8001
          uri: lb://cloud-payment-service
          predicates:
            #断言，路径相匹配的进行路由
            - Path=/payment/lb/**
#            - After=2020-08-20T16:17:02.118+08:00[Asia/Shanghai]
#            - Cookie=username,zzyy
#            - Header=X-Request-Id, \d+    #- Header=X-Request-Id, \d+ #请求头要有X-Request-Id属性，并且值为正数
#            - Host=**.lin.com
#            - Method=GET
#            - Query=username, \d+ # 要有参数名username并且值还要是正整数才能路由
eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    #把他注册到注册中心了
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册消息，默认为true，单节点无所谓，
    #集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #集群版
#      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
      #单机版
       defaultZone: http://eureka7001.com:7001/eureka/
#      defaultZone: http://localhost:7001/eureka/

